name: Setup
description: Setup Node.js and install dependencies

inputs:
  fetch-depth:
    description: 'Git fetch depth passed to actions/checkout. Pass 0 to fetch full history.'
    required: false
    default: '1'
  working-directory:
    description: 'Directory in which to run things in.'
    required: false
    default: '.'

outputs:
  scripts:
    description: "Comma–separated list of available npm scripts. Includes comma at the beginning and the end, so you can use contains(needs.setup.outputs.scripts, ',script-name,')"
    value: ${{ steps.scripts.outputs.scripts }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.fetch-depth }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '${{ inputs.working-directory }}/.nvmrc'

    - name: Collect npm scripts
      id: scripts
      working-directory: ${{ inputs.working-directory }}
      shell: sh
      run: |
        npm_scripts="$(
          jq -r '.scripts | keys | .[]' package.json | paste -sd,
        )"
        echo "Detected npm scripts: $npm_scripts"
        printf 'scripts=,%s,\n' "$npm_scripts" >> "$GITHUB_OUTPUT"

    - name: Restore cache
      id: cache
      uses: actions/cache/restore@v4
      with:
        # ⚠️ Keep path and key in sync with cache/save below
        path: |
          ${{ inputs.working-directory }}/**/node_modules
          ${{ inputs.working-directory }}/.yarn/install-state.gz
        key: |
          node-os:${{ runner.os }}-nodeVer:${{ hashFiles('**/.nvmrc') }}-packageJson:${{ hashFiles('**/package.json') }}-lock:${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
        restore-keys: |
          node-os:${{ runner.os }}-nodeVer:${{ hashFiles('**/.nvmrc') }}-packageJson:${{ hashFiles('**/package.json') }}-
          node-os:${{ runner.os }}-nodeVer:${{ hashFiles('**/.nvmrc') }}-
          node-os:${{ runner.os }}-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        if [ -e "yarn.lock" ]
        then
          yarn install --immutable
        else
          npm ci
        fi

    - name: Save cache
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          ${{ inputs.working-directory }}/**/node_modules
          ${{ inputs.working-directory }}/.yarn/install-state.gz
        key: |
          node-os:${{ runner.os }}-nodeVer:${{ hashFiles('**/.nvmrc') }}-packageJson:${{ hashFiles('**/package.json') }}-lock:${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
